// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/clocklear/pirelayserver/cmd/pirelayserver/internal (interfaces: Configurer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	internal "github.com/clocklear/pirelayserver/cmd/pirelayserver/internal"
	gomock "github.com/golang/mock/gomock"
)

// MockConfigurer is a mock of Configurer interface
type MockConfigurer struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurerMockRecorder
}

// MockConfigurerMockRecorder is the mock recorder for MockConfigurer
type MockConfigurerMockRecorder struct {
	mock *MockConfigurer
}

// NewMockConfigurer creates a new mock instance
func NewMockConfigurer(ctrl *gomock.Controller) *MockConfigurer {
	mock := &MockConfigurer{ctrl: ctrl}
	mock.recorder = &MockConfigurerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigurer) EXPECT() *MockConfigurerMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockConfigurer) Get() (internal.Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(internal.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockConfigurerMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConfigurer)(nil).Get))
}

// Set mocks base method
func (m *MockConfigurer) Set(arg0 internal.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set
func (mr *MockConfigurerMockRecorder) Set(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockConfigurer)(nil).Set), arg0)
}
